void NhapMang(int a[], int &n)
{
    for(int i = 0; i<n ; i++)
    {
	    cout << "Nhap phan tu thu " << i + 1 << " : ";
        cin >> a[i];
    }
}
============================================================================
int XuatMang(int a[],int n)
    {
        for(int i=0;i<n;i++)
    {
	    cout << a[i] << " ";
    }
}
============================================================================
int max(int a[], int n)
{
    int max = a[0];
    for (int i = 1; i < n; i++)
        if (max < a[i])
            max = a[i];
    return max;
}
============================================================================
int min(int a[], int n)
{
    int min = a[0];
    for (int i = 1; i < n; i++)
        if (min > a[i])
            min = a[i];
    return min;
}
============================================================================
void MangNgauNhien(int a[], int n)
{
	srand((unsigned)time(NULL));
		for(int i = 0; i < n; i++)
			a[i]=rand()%100 - rand()%100;

}
============================================================================
bool kiemTraSNT(int n)
{
	if(n < 2)
		return false;
	for(int i = 2; i < n/2; i++)
		if(n % i == 0)
			return false;
	return true;
}
============================================================================
void hoanVi(int &x, int &y)
{
	int q = x;
	x = y;
	y = q;
}
============================================================================
int swap(int a[], int n) {
    int tg;
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (a[i] > a[j]) {
                tg = a[i];
                a[i] = a[j];
                a[j] = tg;        
            }
        }
    }
}